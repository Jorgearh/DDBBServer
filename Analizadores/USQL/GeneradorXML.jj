options{
	LOOKAHEAD = 1;
	STATIC = false;
	IGNORE_CASE = true;
	OUTPUT_DIRECTORY = "analizador/";
}

PARSER_BEGIN(ParserUSQL)
	public class ParserUSQL{
		public static void main(String[] args) throws ParseException{
				try{
					ParserUSQL parser = new ParserUSQL(System.in);
					parser.INI();
				}catch(ParseException pe){
					System.err.println("Error en el analisis...");
					System.err.println(pe.getMessage());
				}
			}
		}
PARSER_END(ParserUSQL)

SKIP :
{
	 " "
	|"\n"
	|"\t"
	|"\r"
}

SPECIAL_TOKEN :
{
	 <SINGLE_LINE_COMMENT: "#" (~["\n","\r"])* ("\n"|"\r"|"\r\n")>
	|<MULTI_LINE_COMMENT: "#*" (~[]) "*#">
}

TOKEN :
{
	 <#letra: ["a" - "z"] >
	|<#digito: ["0" - "9"]>
}

TOKEN :
{
	 <_text: "Text">
	|<_integer: "Integer">
	|<_double: "Double">
	|<_bool: "Bool">
	|<_date: "Date">
	|<_datetime: "DateTime">
}

TOKEN :
{
	 <entero: (("-")? <digito>)+ >
	|<doble: (("-")? <digito>)+ "." (<digito>)+>
	|<booleano: "true" | "false" >
	|<fecha: <digito><digito>"-"<digito><digito>"-"<digito><digito><digito><digito>>
	|<fecha_hora: <fecha> " " <digito><digito> ":" <digito><digito> ":" <digito><digito>>
	|<cadena: ("\"") (~["\"", "\n", "\r"])* ("\"") >
	|<id: <letra> (<letra> | <digito> | "_")* >
	|<var: "@"<id>>
	|<path: (<letra> ":")? "/" (<id> "/")* <id> ("." <id>)?>
}


void INI() : {}
{
	SENTENCIAS_USQL() <EOF>
}

void SENTENCIAS_USQL() : {}
{
	( SENTENCIA_USQL() ";" )*
}

void SENTENCIA_USQL() : {}
{
	 DDL()
	|DML()
	|DCL()
}


/**************************************************************************************************************
	SENTENCIAS_USQL DDL
**************************************************************************************************************/
void DDL() : {}
{
	 "CREAR" DDL_CREATE()
	|"USAR" <id>
	|"ALTERAR" DDL_ALTER()
	|"ELIMINAR" USQL_OBJECT_NAME() <id>
}


/**************************************************************************************************************
			SENTENCIAS_USQL DDL CREATE
**************************************************************************************************************/
void DDL_CREATE() : {}
{
	 DDL_CREATE_DB()
	|DDL_CREATE_TABLE()
	|DDL_CREATE_OBJECT()
	|DDL_CREATE_PROC()
	|DDL_CREATE_FUNC()
	|DDL_CREATE_USER()
}

/**************************************************************************************************************
					SENTENCIAS_USQL DDL CREATE DB
**************************************************************************************************************/
void DDL_CREATE_DB() : {}
{
	"BASE_DATOS" <id>
}

/**************************************************************************************************************
					SENTENCIAS_USQL DDL CREATE TABLE
**************************************************************************************************************/
void DDL_CREATE_TABLE() : {}
{
	"TABLA" <id> "(" L_DEC_CAMPO() ")"
}

void L_DEC_CAMPO() : {}
{
	DEC_CAMPO() ( "," DEC_CAMPO() )*
}

void DEC_CAMPO() : {}
{
	TIPO_DATO() <id> ( COMPLEMENTO_CAMPO() )*
}

/**************************************************************************************************************
					SENTENCIAS_USQL DDL CREATE OBJECT
**************************************************************************************************************/
void DDL_CREATE_OBJECT() : {}
{
	"OBJETO" <id> "(" L_DEC_ATR() ")"
}

void L_DEC_ATR() : {}
{
	DEC_ATRIBUTO() ( "," DEC_ATRIBUTO())*
}

void DEC_ATRIBUTO() : {}
{
	TIPO_DATO() <id>
}

/**************************************************************************************************************
					SENTENCIAS_USQL DDL CREATE PROCEDURE
**************************************************************************************************************/
void DDL_CREATE_PROC() : {}
{
	"PROCEDIMIENTO" <id> "(" [ L_ARG() ] ")" CUERPO()
}

/**************************************************************************************************************
					SENTENCIAS_USQL DDL CREATE FUNCTION
**************************************************************************************************************/
void DDL_CREATE_FUNC() : {}
{
	"FUNCION" <id> "(" [ L_ARG() ] ")" TIPO_DATO() CUERPO()
}

/**************************************************************************************************************
					SENTENCIAS_USQL DDL CREATE USER
**************************************************************************************************************/
void DDL_CREATE_USER() : {}
{
	"USUARIO" <id> "COLOCAR" "password" "=" <cadena>
}


/**************************************************************************************************************
			SENTENCIAS_USQL DDL ALTER
**************************************************************************************************************/
void DDL_ALTER() : {}
{
	 DDL_ALTER_TABLE()
	|DDL_ALTER_OBJECT()
	|DDL_ALTER_USER()
}

/**************************************************************************************************************
					SENTENCIAS_USQL DDL ALTER TABLE
**************************************************************************************************************/
void DDL_ALTER_TABLE() : {}
{
	"TABLA" <id> ( ADD() | QUIT() )
}

void ADD() : {}
{
	"AGREGAR" "(" L_DEC_CAMPO() ")"
}

void QUIT() : {}
{
	"QUITAR" L_ID()
}
/**************************************************************************************************************
					SENTENCIAS_USQL DDL ALTER OBJECT
**************************************************************************************************************/
void DDL_ALTER_OBJECT() : {}
{
	"OBJETO" <id> ( ADD() | QUIT() )
}

/**************************************************************************************************************
					SENTENCIAS_USQL DDL ALTER USER
**************************************************************************************************************/
void DDL_ALTER_USER() : {}
{
	"USUARIO" <id> "CAMBIAR" "pasword" "=" <cadena>
}


/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/

/**************************************************************************************************************
	SENTENCIAS_USQL DML
**************************************************************************************************************/
void DML() : {}
{
	 DML_INSERT()
	|DML_UPDATE()
	|DML_DELETE()
	|DML_SELECT()
}

/**************************************************************************************************************
			SENTENCIAS_USQL DML INSERT IN TABLE
**************************************************************************************************************/
void DML_INSERT() : {}
{
	"INSERTAR" "EN" "TABLA" <id> ["(" L_ID() ")" "VALORES" ] "(" L_VAL() ")"
}

/**************************************************************************************************************
			SENTENCIAS_USQL DML UPDATE
**************************************************************************************************************/
void DML_UPDATE() : {}
{
	"ACTUALIZAR" "TABLA" <id> "(" L_ID() ")" "VALORES" "(" L_VAL() ")" [ "DONDE" /*COND()*/ ]
}

/**************************************************************************************************************
			SENTENCIAS_USQL DML DELETE
**************************************************************************************************************/
void DML_DELETE() : {}
{
	"BORRAR" "EN" "TABLA" <id> 	[ "DONDE" /*COND()*/ ]
}

/**************************************************************************************************************
			SENTENCIAS_USQL DML SELECT
**************************************************************************************************************/
void DML_SELECT() : {}
{
	"SELECCIONAR" ( L_ID() | "*" ) "DE" L_ID() [ "DONDE" /*COND()*/ [ "ORDENAR" "POR" ("ASC" | "DESC") ] ]
}


/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/

/**************************************************************************************************************
	SENTENCIAS_USQL DCL
**************************************************************************************************************/
void DCL() : {}
{
	 DCL_OTORGAR()
	|DCL_DENEGAR()
}

/**************************************************************************************************************
			SENTENCIAS_USQL DCL OTORGAR
**************************************************************************************************************/
void DCL_OTORGAR() : {}
{
	"OTORGAR" "PERMISOS" <id> "," <id> "." ( <id> | "*" )
}

/**************************************************************************************************************
			SENTENCIAS_USQL DCL DENEGAR
**************************************************************************************************************/
void DCL_DENEGAR() : {}
{
	"DENEGAR" "PERMISOS" <id> "," <id> "." ( <id> | "*" )
}



/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/

/**************************************************************************************************************
	SENTENCIAS_USQL SSL
**************************************************************************************************************/

void SENTENCIAS_SSL() : {}
{
	( SENTENCIA_SSL())*
}

void SENTENCIA_SSL() : {}
{
	 SSL_DEC_VAR_OBJ() ";"
	|SSL_ASG_VAR_ATR() ";"
	|SSL_SI()
	|SSL_SELECCIONA()
	|SSL_PARA()
	|SSL_MIENTRAS()
	|SSL_DETENER() ";"
	|SSL_IMPRIMIR() ";"
	|SSL_FECHA() ";"
	|SSL_FECHA_HORA() ";"
	|SSL_CONTAR() ";"
}

/**************************************************************************************************************
			SENTENCIAS_USQL SSL DECLARAR VARIABLE
**************************************************************************************************************/
void SSL_DEC_VAR_OBJ() : {}
{
	"DECLARAR" L_VAR() ( TIPO_DATO() [ "=" EXPRESION() ] | <id>)
}

/**************************************************************************************************************
			SENTENCIAS_USQL SSL ASIGNAR VARIABLE
**************************************************************************************************************/
void SSL_ASG_VAR_ATR() : {}
{
	<var> [ "." <id> ] "=" EXPRESION()
}

/**************************************************************************************************************
			SENTENCIAS_USQL SSL SI
**************************************************************************************************************/
void SSL_SI() : {}
{
	"SI" CONDICION() CUERPO() [ "SINO" CUERPO()]
}

/**************************************************************************************************************
			SENTENCIAS_USQL SSL SELECCIONA
**************************************************************************************************************/
void SSL_SELECCIONA() : {}
{
	"SELECCIONA" "(" EXPRESION() ")" "{" L_CASO() [ "DEFECTO" ":" SENTENCIAS_METHOD_USQL() ] "}"
}

void L_CASO() : {}
{
	CASO() ( CASO() )*
}

void CASO() : {}
{
	"CASO" VAL_CASO() ":" SENTENCIAS_METHOD_USQL()
}

void VAL_CASO() : {}
{
	 <cadena>
	|<entero>
	|<doble>
}

/**************************************************************************************************************
			SENTENCIAS_USQL SSL PARA
**************************************************************************************************************/
void SSL_PARA() : {}
{
	"PARA" "(" "DECLARAR" <id> <_integer> "=" EXPRESION() ";" COND() ";" ( "++" | "--" ) ")" CUERPO()
}

/**************************************************************************************************************
			SENTENCIAS_USQL SSL MIENTRAS
**************************************************************************************************************/
void SSL_MIENTRAS() : {}
{
	"MIENTRAS" CONDICION() CUERPO()
}

/**************************************************************************************************************
			SENTENCIAS_USQL SSL DETENER
**************************************************************************************************************/
void SSL_DETENER() : {}
{
	"DETENER"
}

/**************************************************************************************************************
			SENTENCIAS_USQL SSL IMPRIMIR
**************************************************************************************************************/
void SSL_IMPRIMIR() : {}
{
	"IMPRIMIR" "(" EXPRESION() ")"
}

/**************************************************************************************************************
			SENTENCIAS_USQL SSL FECHA
**************************************************************************************************************/
void SSL_FECHA() : {}
{
	"FECHA" "(" ")"
}

/**************************************************************************************************************
			SENTENCIAS_USQL SSL FECHA HORA
**************************************************************************************************************/
void SSL_FECHA_HORA() : {}
{
	"FECHA_HORA" "(" ")"
}

/**************************************************************************************************************
			SENTENCIAS_USQL SSL CONTAR
**************************************************************************************************************/
void SSL_CONTAR() : {}
{
	"CONTAR" "(" "<<" DML_SELECT() ">>" ")"
}




void BACKUP() : {}
{
	"BACKUP" ( "USQLDUMP" | "COMPLETO" ) <id> <id> ";"
}

void RESTAURAR() : {}
{
	"RESTAURAR" ( "USQLDUMP" | "COMPLETO" ) <cadena>
}




/**************************************************************************************************************
								COMUN
**************************************************************************************************************/

void CONDICION() : {}
{
	"(" COND() ")"
}

void CUERPO() : {}
{
	"{" SENTENCIAS_METHOD_USQL() "}"
}


void SENTENCIAS_METHOD_USQL() : {}
{
	 SENTENCIAS_USQL()
	 //| RETORNO() EXPRESION()
	 //| CALL()
}

void L_ARG() : {}
{
	ARG() ( "," ARG() )*
}

void ARG() : {}
{
	TIPO_DATO() <var>
}


void L_ID() : {}
{
	<id> ( "," <id> )*
}

void L_VAL() : {}
{
	VAL() ( "," VAL() )*
}

void VAL() : {}
{
	 <entero>
	|<doble>
	|<booleano>
	|<cadena>
	|<fecha>
	|<fecha_hora>
}

void L_VAR() : {}
{
	<var> ( "," <var> )*
}

void USQL_OBJECT_NAME() : {}
{
	 "TABLA"
	|"BASE_DATOS"
	|"OBJETO"
	|"USER"
}

void TIPO_DATO() : {}
{
	 <_text>
	|<_integer>
	|<_double>
	|<_bool>
	|<_date>
	|<_datetime>
}

void COMPLEMENTO_CAMPO() : {}
{
	 "Nulo"
	|"No Nulo"
	|"Autoincrementable"
	|"Llave_Primaria"
	|"Llave_Foranea"
	|"Unico"
}
