options{
	LOOKAHEAD = 1;
	STATIC = false;
	IGNORE_CASE = true;
	OUTPUT_DIRECTORY = "analizador/";
}

PARSER_BEGIN(ParserUSQL)
	public class ParserUSQL{
		public static void main(String[] args) throws ParseException{
				try{
					ParserUSQL parser = new ParserUSQL(System.in);
					parser.INI();
				}catch(ParseException pe){
					System.err.println("Error en el analisis...");
					System.err.println(pe.getMessage());
				}
			}
		}
PARSER_END(ParserUSQL)

SKIP :
{
	 " "
	|"\n"
	|"\t"
	|"\r"
}

TOKEN :
{
	 <#letra: ["a" - "z"] >
	|<#digito: ["0" - "9"]>
}

TOKEN :
{
	 <_text: "Text">
	|<_integer: "Integer">
	|<_double: "Double">
	|<_bool: "Bool">
	|<_date: "Date">
	|<_datetime: "DateTime">
}

TOKEN :
{
	 <entero: (("-")? <digito>)+ >
	|<doble: (("-")? <digito>)+ "." (<digito>)+>
	|<booleano: "true" | "false" >
	|<fecha: <digito><digito>"-"<digito><digito>"-"<digito><digito><digito><digito>>
	|<fecha_hora: <fecha> " " <digito><digito> ":" <digito><digito> ":" <digito><digito>>
	|<cadena: ("\"") (~["\"", "\n", "\r"])* ("\"") >
	|<id: <letra> (<letra> | <digito> | "_")* >
	|<var: "@"<id>>
	|<path: (<letra> ":")? "/" (<id> "/")* <id> ("." <id>)?>
}


void INI() : {}
{
	SENTENCIA() ";" <EOF>
}

void SENTENCIA() : {}
{
	DDL()
}


/**************************************************************************************************************
								SENTENCIAS DDL
**************************************************************************************************************/
void DDL() : {}
{
	 "CREAR" DDL_CREATE()
	|"USAR" <id>
	|"ALTERAR" DDL_ALTER()
	|"ELIMINAR" USQL_OBJECT_NAME() <id>
}


/**************************************************************************************************************
								SENTENCIAS DDL CREATE
**************************************************************************************************************/
void DDL_CREATE() : {}
{
	 DDL_CREATE_DB()
	|DDL_CREATE_TABLE()
	|DDL_CREATE_OBJECT()
	|DDL_CREATE_PROC()
	|DDL_CREATE_FUNC()
	|DDL_CREATE_USER()
}

/**************************************************************************************************************
								SENTENCIAS DDL CREATE DB
**************************************************************************************************************/
void DDL_CREATE_DB() : {}
{
	"BASE_DATOS" <id>
}

/**************************************************************************************************************
								SENTENCIAS DDL CREATE TABLE
**************************************************************************************************************/
void DDL_CREATE_TABLE() : {}
{
	"TABLA" <id> "(" L_DEC_CAMPO() ")"
}

void L_DEC_CAMPO() : {}
{
	DEC_CAMPO() ( "," DEC_CAMPO() )*
}

void DEC_CAMPO() : {}
{
	TIPO_DATO() <id> ( COMPLEMENTO_CAMPO() )*
}

/**************************************************************************************************************
								SENTENCIAS DDL CREATE OBJECT
**************************************************************************************************************/
void DDL_CREATE_OBJECT() : {}
{
	"OBJETO" <id> "(" L_DEC_ATR() ")"
}

void L_DEC_ATR() : {}
{
	DEC_ATRIBUTO() ( "," DEC_ATRIBUTO())*
}

void DEC_ATRIBUTO() : {}
{
	TIPO_DATO() <id>
}

/**************************************************************************************************************
								SENTENCIAS DDL CREATE PROCEDURE
**************************************************************************************************************/

void DDL_CREATE_PROC() : {}
{
	"PROCEDIMIENTO" <id> "(" [ L_DEC_ATR() ] ")" "{" /**/ "}"
}

void DDL_ALTER() : {}
{
	 DDL_ALTER_TABLE()
	|DDL_ALTER_OBJECT()
	|DDL_ALTER_USER()
}


/**************************************************************************************************************
								COMUN
**************************************************************************************************************/

void USQL_OBJECT_NAME() : {}
{
	 "TABLA"
	|"BASE_DATOS"
	|"OBJETO"
	|"USER"
}


void TIPO_DATO() : {}
{
	 <_text>
	|<_integer>
	|<_double>
	|<_bool>
	|<_date>
	|<_datetime>
}

void COMPLEMENTO_CAMPO() : {}
{
	 "Nulo"
	|"No Nulo"
	|"Autoincrementable"
	|"Llave_Primaria"
	|"Llave_Foranea"
	|"Unico"
}
