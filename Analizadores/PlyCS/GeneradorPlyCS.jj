options{
	LOOKAHEAD = 1;
	STATIC = false;
	IGNORE_CASE = true;
	OUTPUT_DIRECTORY = "analizador/";
}

PARSER_BEGIN(ParserPlyCS)
	public class ParserPlyCS{
		public static void main(String[] args) throws ParseException{
				try{
					ParserPlyCS parser = new ParserPlyCS(System.in);
					parser.INI();
				}catch(ParseException pe){
					System.err.println("Error en el analisis...");
					System.err.println(pe.getMessage());
				}
			}
		}
PARSER_END(ParserPlyCS)



SKIP :
{
	 " "
	|"\n"
	|"\t"
	|"\r"
}

TOKEN :
{
	 <num: (["0"-"9"])+ >
	|<bool: "true" | "false" >
	|<cad: ("\"") (~["\"", "\n", "\r"])* ("\"") >
}


void INI() : {}
{
	OBJECT() <EOF>
}
void OBJECT() : {}
{
	"[" [ MEMBERS() ] "]"
}

void MEMBERS() : {}
{
	PAIR() ( "," PAIR() )*
}

void PAIR() : {}
{
	 <cad> ":" VALUE()
	|ARRAY()
}

void VALUE() : {}
{
	 <cad>
	|<num>
	|<bool>
	|OBJECT()
}



void ARRAY() : {}
{
	"[" [ ELEMENTOS() ] "]"
}

void ELEMENTOS() : {}
{
	MAP() ( MAP() )*
}

void MAP() : {}
{
	<cad> "=>" VALUE()
}
